{"version":3,"sources":["appComponents/test.module.css","appComponents/deckCreator.module.css","appComponents/testComponents/scoreMultiplier.module.css","appComponents/profileComponents/userCard.module.css","appComponents/profileComponents/testHistoryComponents/answerGraph.module.css","appComponents/testComponents/activeFlashCard.module.css","appComponents/testComponents/progressBar.module.css","appComponents/nav.module.css","appComponents/home.module.css","appComponents/profile.module.css","appComponents/profileComponents/defaultUserImage.module.css","appComponents/deckCreatorComponents/flashCard.module.css","appComponents/profileComponents/testHistory.module.css","appComponents/profileComponents/testHistoryComponents/answerGraphComponents/cardInfo.module.css","appComponents/testComponents/scoreBoard.module.css","appComponents/testComponents/results.module.css","appComponents/Nav.js","appComponents/Home.js","appComponents/Options.js","appComponents/profileComponents/TestHistory.js","appComponents/profileComponents/DefaultUserImage.js","appComponents/profileComponents/UserCard.js","appComponents/profileComponents/testHistoryComponents/answerGraphComponents/CardInfo.js","appComponents/profileComponents/testHistoryComponents/AnswerGraph.js","appComponents/Profile.js","appComponents/deckCreatorComponents/FlashCard.js","appComponents/deckCreatorComponents/ModalTextEntry.js","appComponents/DeckCreator.js","appComponents/testComponents/ActiveFlashCard.js","appComponents/testComponents/Results.js","appComponents/testComponents/ScoreBoard.js","appComponents/testComponents/ScoreMultiplier.js","appComponents/testComponents/ProgressBar.js","appComponents/Test.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","styles","nav","link","to","logo","navListItem","Home","props","useState","toDeckCreator","setToDeckCreator","toTesting","setToTesting","accordian","defaultActiveKey","decks","map","deck","index","Card","key","Toggle","as","Header","eventKey","cardHeader","name","Button","variant","size","onClick","startTest","startTestClicked","Collapse","Body","cardBody","cards","length","bodyButtons","editDeck","editDeckClicked","window","confirm","deleteDeck","deleteDeckClicked","createDeck","Options","TestHistory","testHistory","Accordion","defaultdeckHistory","currentProfile","statsContainer","stats","timesCompleted","avgLastfive","moreInfo","showModal","DefaultUserImage","userImageContainer","headContainer","head","bodyContainer","body","UserCard","userCardContainer","imageContainer","userStatsContainer","profile","userStats","statsItem","score","testsCompleted","perfectScores","CardInfo","cardInfoContainer","hintSide","hint","AnswerSide","answer","AnswerGraph","console","log","results","Modal","show","onHide","dialogClassName","modal","centered","closeButton","Title","id","deckName","deckReview","deckResults","questionResults","result","resultNull","resultRight","resultWrong","cardInfo","Profile","setShowModal","john","cardnumber","recentResults","profileContainer","deckStatsContainer","deckStats","userCard","FlashCard","card","editCard","content","Text","button","deleteCard","ModalTextEntry","hide","InputGroup","Form","Control","placeholder","value","currentValue","onChange","valueChanged","DeckCreator","exit","state","exitDeckCreation","setState","saveDeck","currentDeck","changeDeckName","nameChangeActive","deckNameChanged","event","newDeck","target","closeDeckNameModal","cardSelection","currentCard","undefined","splice","currentHintChange","currentAnswerChange","addNewCard","newCurrentCard","push","currentSelection","JSON","parse","stringify","defaultCard","this","deckCreator","ListGroup","Badge","pill","Item","statsListContainer","statsList","statsListItem","creationContainer","creationPanel","cardForm","Group","controlId","Label","rows","type","block","newCardButton","React","Component","ActiveFlashCard","document","getElementById","showBack","style","transform","color","flashCard","flashCardInner","flashCardFront","flashCardBack","currentStreak","Results","toHome","setToHome","resultsContainer","mark","maxMark","ScoreBoard","scoreBoardContainer","streak","ScoreMultiplier","multiplierContainer","currentMultiplier","fiveTimesOn","fiveTimesOff","fourTimesOn","fourTimesOff","threeTimesOn","threeTimesOff","twoTimesOn","twoTimesOff","oneTimeOn","ProgressBar","progressContainer","marksTable","marks","progressItem","questionNumber","correctlyAnswered","currentMark","Test","answerChanged","newAnswer","currentAnswer","checkAnswerClicked","toLowerCase","markedCorrect","newCurrentMark","newCurrentStreak","newScore","newMarks","newCardsAnswered","cardsAnswered","markedIncorrect","nextQuestion","nextCard","testingContainer","nonScoreBoardContent","progress","cardAndInput","flashCardContainer","answerBox","continueButton","checkButton","scoreMultiplierContainer","scoreMultiplier","App","newDecks","localStorage","setItem","selection","getItem","savedDecks","path","exact","render","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.80c2d19f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"testingContainer\":\"test_testingContainer__3iuYY\",\"nonScoreBoardContent\":\"test_nonScoreBoardContent__2lGQu\",\"progressContainer\":\"test_progressContainer__1s2Yy\",\"progress\":\"test_progress__sKi_l\",\"cardAndInput\":\"test_cardAndInput__2nbmb\",\"scoreMultiplierContainer\":\"test_scoreMultiplierContainer__2XJ-H\",\"scoreMultiplier\":\"test_scoreMultiplier__3YwnJ\",\"flashCardContainer\":\"test_flashCardContainer__31Fuk\",\"answerBox\":\"test_answerBox__3sZaD\",\"checkButton\":\"test_checkButton__34XZY\",\"continueButton\":\"test_continueButton__2__0B\",\"score\":\"test_score__3OdJq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deckCreator\":\"deckCreator_deckCreator__3HM3b\",\"creationContainer\":\"deckCreator_creationContainer__1_ukp\",\"creationPanel\":\"deckCreator_creationPanel__3JhFH\",\"cardForm\":\"deckCreator_cardForm__3EFQv\",\"stats\":\"deckCreator_stats__2yAgh\",\"statsListContainer\":\"deckCreator_statsListContainer__3bZDl\",\"statsList\":\"deckCreator_statsList__eSp8a\",\"statsListItem\":\"deckCreator_statsListItem__2eHhE\",\"cards\":\"deckCreator_cards__1gp86\",\"newCardButton\":\"deckCreator_newCardButton__1Jb7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"multiplierContainer\":\"scoreMultiplier_multiplierContainer__nXhem\",\"fiveTimesOn\":\"scoreMultiplier_fiveTimesOn__2p5JS\",\"fiveTimesOff\":\"scoreMultiplier_fiveTimesOff__2ni-e\",\"fourTimesOn\":\"scoreMultiplier_fourTimesOn__COOlF\",\"fourTimesOff\":\"scoreMultiplier_fourTimesOff__1dp16\",\"threeTimesOn\":\"scoreMultiplier_threeTimesOn__2AB8K\",\"threeTimesOff\":\"scoreMultiplier_threeTimesOff__2DLp-\",\"twoTimesOn\":\"scoreMultiplier_twoTimesOn__3-QkJ\",\"twoTimesOff\":\"scoreMultiplier_twoTimesOff__1RrYz\",\"oneTimeOn\":\"scoreMultiplier_oneTimeOn__3ckij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userCardContainer\":\"userCard_userCardContainer__3GfGf\",\"imageContainer\":\"userCard_imageContainer__2bBdI\",\"userStatsContainer\":\"userCard_userStatsContainer__2ycj5\",\"userStats\":\"userCard_userStats__1OjEG\",\"statsItem\":\"userCard_statsItem__24c4T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"answerGraph_modal__EFnKS\",\"deckReview\":\"answerGraph_deckReview__L3miI\",\"deckResults\":\"answerGraph_deckResults__vQ2bz\",\"questionResults\":\"answerGraph_questionResults__2fQtt\",\"resultNull\":\"answerGraph_resultNull__1mgsm\",\"resultRight\":\"answerGraph_resultRight__zcMhZ\",\"resultWrong\":\"answerGraph_resultWrong__3ni09\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flashCard\":\"activeFlashCard_flashCard__HOZph\",\"flashCardInner\":\"activeFlashCard_flashCardInner__25tWq\",\"flashCardFront\":\"activeFlashCard_flashCardFront__1ITOz\",\"flashCardBack\":\"activeFlashCard_flashCardBack__3AIHX\",\"hint\":\"activeFlashCard_hint__2Wc3D\",\"answer\":\"activeFlashCard_answer__3m0ly\",\"flashCardinner\":\"activeFlashCard_flashCardinner__2SRvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressContainer\":\"progressBar_progressContainer__2DNvO\",\"marksTable\":\"progressBar_marksTable__3aVh8\",\"correctlyAnswered\":\"progressBar_correctlyAnswered__3BS3y\",\"progressItem\":\"progressBar_progressItem__1kWJo\",\"questionNumber\":\"progressBar_questionNumber__366rI\",\"mark\":\"progressBar_mark__-4jPU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__28yIb\",\"navList\":\"nav_navList__1lU0H\",\"link\":\"nav_link__1oCty\",\"navListItem\":\"nav_navListItem__ODjn7\",\"logo\":\"nav_logo__dCZlh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accordian\":\"home_accordian__jQx2D\",\"cardHeader\":\"home_cardHeader__1ehaT\",\"cardBody\":\"home_cardBody__2YZIy\",\"bodyButtons\":\"home_bodyButtons__1MOx8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"profile_profileContainer__2924K\",\"deckStatsContainer\":\"profile_deckStatsContainer__1ZPvx\",\"deckStats\":\"profile_deckStats__17E1_\",\"userCardContainer\":\"profile_userCardContainer__3hVGH\",\"userCard\":\"profile_userCard__d7_XQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userImageContainer\":\"defaultUserImage_userImageContainer__tY1mG\",\"headContainer\":\"defaultUserImage_headContainer__liFSX\",\"head\":\"defaultUserImage_head__1Dygu\",\"bodyContainer\":\"defaultUserImage_bodyContainer__1fMXf\",\"body\":\"defaultUserImage_body__7R6jq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"flashCard_card__1J2ec\",\"content\":\"flashCard_content__3seGk\",\"button\":\"flashCard_button__3HUqP\",\"hint\":\"flashCard_hint__LPaYC\",\"answer\":\"flashCard_answer__1mhq6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testHistory\":\"testHistory_testHistory__3TyC0\",\"statsContainer\":\"testHistory_statsContainer__3w-dN\",\"stats\":\"testHistory_stats__1L8Ff\",\"moreInfo\":\"testHistory_moreInfo__271GE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardInfoContainer\":\"cardInfo_cardInfoContainer__1A3OX\",\"hintSide\":\"cardInfo_hintSide__2MdDl\",\"answerSide\":\"cardInfo_answerSide__Exm2J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scoreBoardContainer\":\"scoreBoard_scoreBoardContainer__2lmwb\",\"streak\":\"scoreBoard_streak__3NdNa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultsContainer\":\"results_resultsContainer__3cTov\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./nav.module.css\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <Link className={styles.link} to=\"/flacar/\">\r\n        <h3 className={styles.logo}>Flacar+</h3>\r\n      </Link>\r\n\r\n      <Link className={styles.link} to=\"/flacar/profile\">\r\n        <li className={styles.navListItem}>Profile</li>\r\n      </Link>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Accordian from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport styles from \"./home.module.css\";\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\n\r\nfunction Home(props) {\r\n  const [toDeckCreator, setToDeckCreator] = useState(false);\r\n  const [toTesting, setToTesting] = useState(false);\r\n\r\n  const startTestClicked = (index) => {\r\n    props.startTest(index);\r\n    setToTesting(true);\r\n  };\r\n\r\n  const deleteDeckClicked = (index) => {\r\n    if (\r\n      window.confirm(\r\n        `Deck Deletion - Are you sure you want to delete \"${props.decks[index].name}\"?`\r\n      )\r\n    ) {\r\n      props.deleteDeck(index);\r\n    }\r\n  };\r\n\r\n  const editDeckClicked = (index) => {\r\n    props.editDeck(index);\r\n    setToDeckCreator(true);\r\n  };\r\n\r\n  const createDeckClicked = () => {\r\n    props.createDeck();\r\n  };\r\n\r\n  if (toDeckCreator === true) {\r\n    return <Redirect to=\"/flacar/deckcreator\" />;\r\n  }\r\n\r\n  if (toTesting === true) {\r\n    return <Redirect to=\"flacar/testing\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Accordian className={styles.accordian} defaultActiveKey=\"0\">\r\n        {props.decks.map((deck, index) => (\r\n          <Card key={index}>\r\n            <Accordian.Toggle as={Card.Header} eventKey={index}>\r\n              <div className={styles.cardHeader}>\r\n                <h4>{deck.name}</h4>\r\n                <Button\r\n                  variant=\"success\"\r\n                  size=\"lg\"\r\n                  onClick={() => startTestClicked(index)}\r\n                >\r\n                  Start Test\r\n                </Button>\r\n              </div>\r\n            </Accordian.Toggle>\r\n\r\n            <Accordian.Collapse eventKey={index}>\r\n              <Card.Body className={styles.cardBody}>\r\n                Number of cards: {deck.cards.length}\r\n                <div className={styles.bodyButtons}>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    size=\"sm\"\r\n                    onClick={() => {\r\n                      editDeckClicked(index);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => {\r\n                      deleteDeckClicked(index);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </div>\r\n              </Card.Body>\r\n            </Accordian.Collapse>\r\n          </Card>\r\n        ))}\r\n        <Card>\r\n          <Accordian.Toggle as={Card.Header} eventKey={props.decks.length}>\r\n            <div className={styles.cardHeader}>\r\n              <h4>...</h4>\r\n              <Button variant=\"primary\" size=\"lg\" onClick={createDeckClicked}>\r\n                Create\r\n              </Button>\r\n            </div>\r\n          </Accordian.Toggle>\r\n        </Card>\r\n      </Accordian>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction Options() {\r\n  return <h3>Options</h3>;\r\n}\r\n\r\nexport default Options;\r\n","import React from \"react\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport styles from \"./testHistory.module.css\";\r\n\r\nfunction TestHistory(props) {\r\n  return (\r\n    <div className={styles.testHistory}>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {props.defaultdeckHistory.map((deck, index) =>\r\n          deck.currentProfile !== null ? (\r\n            <Card key={index}>\r\n              <Accordion.Toggle as={Card.Header} eventKey={index}>\r\n                <div>\r\n                  <p>{deck.name}</p>\r\n                </div>\r\n              </Accordion.Toggle>\r\n\r\n              <Accordion.Collapse eventKey={index}>\r\n                <Card.Body>\r\n                  <div className={styles.statsContainer}>\r\n                    <div className={styles.stats}>\r\n                      <p>\r\n                        Times completed:{\" \"}\r\n                        {deck[props.currentProfile].timesCompleted}\r\n                      </p>\r\n                      <p>\r\n                        Average score (last 5 attempts):{\" \"}\r\n                        {deck[props.currentProfile].avgLastfive}\r\n                      </p>\r\n                    </div>\r\n                    <div className={styles.moreInfo}>\r\n                      <Button variant=\"primary\" onClick={props.showModal}>\r\n                        more info\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          ) : null\r\n        )}\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestHistory;\r\n","import React from \"react\"\r\nimport styles from \"./defaultUserImage.module.css\"\r\n\r\n\r\nfunction DefaultUserImage() {\r\n    return (\r\n        <div className={styles.userImageContainer}>\r\n            <div className={styles.headContainer}>\r\n                <div className={styles.head}></div>\r\n            </div>\r\n            <div className={styles.bodyContainer}>\r\n                <div className={styles.body}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DefaultUserImage;","import React from \"react\"\r\nimport styles from \"./userCard.module.css\"\r\nimport DefaultUserImage from \"./DefaultUserImage\";\r\n\r\n\r\nfunction UserCard(props) {\r\n\r\n    return (\r\n        <div className={styles.userCardContainer}>\r\n            <h2>Me</h2>\r\n            <div className={styles.imageContainer}>\r\n                <DefaultUserImage />\r\n            </div>\r\n\r\n            <div className={styles.userStatsContainer}>\r\n                <h4> {props.profile.name}</h4>\r\n                <ul className={styles.userStats}>\r\n                    <div className={styles.statsItem}><p>Score:</p> <p>{props.profile.score}</p></div>\r\n                    <div className={styles.statsItem}><p>Tests Taken:</p> <p>{props.profile.testsCompleted}</p></div>\r\n                    <div className={styles.statsItem}><p>Perfect Scores:</p> <p>{props.profile.perfectScores}</p></div>\r\n                    <div className={styles.statsItem}><p>Decks Completed:</p> <p>{props.profile.perfectScores}</p></div>\r\n                    <div className={styles.statsItem}><p>Time Testing:</p> <p>{props.profile.perfectScores}</p></div>\r\n\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard;","import React from \"react\";\r\n\r\nimport styles from \"./cardInfo.module.css\";\r\n\r\nfunction CardInfo(props) {\r\n  return (\r\n    <div className={styles.cardInfoContainer}>\r\n      <div className={styles.hintSide}>\r\n        {props.hint !== null ? props.hint : \"Hover a card...\"}\r\n      </div>\r\n      <div className={styles.AnswerSide}>\r\n        {props.answer !== null ? props.answer : \"Hover a card...\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardInfo;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport CardInfo from \"./answerGraphComponents/CardInfo\";\r\nimport styles from \"./answerGraph.module.css\";\r\n\r\nfunction AnswerGraph(props) {\r\n  console.log(props.results);\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      onHide={props.onHide}\r\n      dialogClassName={styles.modal}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"deckName\">{props.deckName}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className={styles.deckReview}>\r\n          <div className={styles.deckResults}>\r\n            {props.results.map((questionResults, index) => (\r\n              <div className={styles.questionResults}>\r\n                Question {index}\r\n                {questionResults.map((result, index) => (\r\n                  <div\r\n                    className={\r\n                      result[0] === null\r\n                        ? styles.resultNull\r\n                        : result[0] === true\r\n                        ? styles.resultRight\r\n                        : styles.resultWrong\r\n                    }\r\n                  >\r\n                    {console.log(result)}\r\n                  </div>\r\n                ))}{\" \"}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className={styles.cardInfo}>\r\n            <CardInfo></CardInfo>\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AnswerGraph;\r\n","import React, { useState } from \"react\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport TestHistory from \"./profileComponents/TestHistory\";\r\nimport styles from \"./profile.module.css\";\r\nimport UserCard from \"./profileComponents/UserCard\";\r\nimport AnswerGraph from \"./profileComponents/testHistoryComponents/AnswerGraph\";\r\n\r\nfunction Profile(props) {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [currentdeckModal, setCurrentDeckModal] = useState(null);\r\n\r\n  let defaultProfile = {\r\n    name: \"John\",\r\n    score: 324234,\r\n    testsCompleted: 231,\r\n    perfectScores: 2,\r\n  };\r\n  let defaultdeckHistory = [\r\n    {\r\n      name: \"deck 1\",\r\n      john: { avgLastfive: 0.8, timesCompleted: 12 },\r\n      cardnumber: 21,\r\n      recentResults: [\r\n        [[true], [false], [null]],\r\n        [[true], [true], [true]],\r\n        [[false], [true], [false]],\r\n      ],\r\n    },\r\n    {\r\n      name: \"deck 2\",\r\n      john: { avgLastfive: 0.8, timesCompleted: 187 },\r\n      cardnumber: 2,\r\n      recentResults: [\r\n        [[true], [false], [null]],\r\n        [[true], [true], [true]],\r\n        [[false], [true], [false]],\r\n      ],\r\n    },\r\n  ];\r\n  let currentProfile = \"john\";\r\n\r\n  return (\r\n    <div className={styles.profileContainer}>\r\n      <div className={styles.deckStatsContainer}>\r\n        <div className={styles.deckStats}>\r\n          <TestHistory\r\n            currentProfile={currentProfile}\r\n            defaultdeckHistory={defaultdeckHistory}\r\n            showModal={() => setShowModal(true)}\r\n          />\r\n        </div>{\" \"}\r\n      </div>\r\n      <div className={styles.userCardContainer}>\r\n        <div className={styles.userCard}>\r\n          <UserCard profile={defaultProfile} />\r\n        </div>\r\n        {showModal ? (\r\n          <AnswerGraph\r\n            show={true}\r\n            onHide={() => setShowModal(false)}\r\n            deckName={defaultdeckHistory[1].name}\r\n            results={defaultdeckHistory[1].recentResults}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport styles from \"./flashCard.module.css\";\r\n\r\nfunction FlashCard(props) {\r\n  const editCardClicked = () => {\r\n    return props.editCard(props.index);\r\n  };\r\n\r\n  const deleteCardClicked = () => {\r\n    if (window.confirm(\"Are you sure you want to delete this card?\"))\r\n      return props.deleteCard(props.index);\r\n  };\r\n\r\n  return (\r\n    <Card className={styles.card} onClick={editCardClicked}>\r\n      <div className={styles.content}>\r\n        <Card.Title className={styles.hint}>{props.hint}</Card.Title>\r\n        <Card.Text className={styles.answer}>{props.answer}</Card.Text>\r\n      </div>\r\n      <div className={styles.button}>\r\n        <Button variant=\"danger\" size=\"sm\" onClick={deleteCardClicked}>\r\n          x\r\n        </Button>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default FlashCard;\r\n","import React from \"react\"\r\nimport Modal from \"react-bootstrap/Modal\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Button from \"react-bootstrap/Button\"\r\n\r\nfunction ModalTextEntry(props) {\r\n\r\n    const saveClicked = (event) => { props.save(event.target.value) }\r\n\r\n    return (\r\n        <Modal show={props.show} onHide={props.hide} centered>\r\n            <Modal.Header closeButton>\r\n                <InputGroup>\r\n                    <Form.Control placeholder={props.placeholder} value={props.currentValue} onChange={props.valueChanged}></Form.Control>\r\n                </InputGroup>\r\n            </Modal.Header>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalTextEntry;","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport styles from \"./deckCreator.module.css\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport FlashCard from \"./deckCreatorComponents/FlashCard\";\r\nimport ModalTextEntry from \"./deckCreatorComponents/ModalTextEntry\";\r\n\r\nclass DeckCreator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentDeck:\r\n        this.props.currentSelection === null\r\n          ? null\r\n          : JSON.parse(JSON.stringify(props.decks[props.currentSelection])),\r\n      currentCard: null,\r\n      defaultCard: {\r\n        hint: \"Click a card to continue...\",\r\n        answer: \"------------------->\",\r\n      },\r\n      nameChangeActive: false,\r\n      exitDeckCreation: false,\r\n    };\r\n  }\r\n\r\n  //Exit Deck Creation\r\n\r\n  exit = () => {\r\n    let exitTrue = this.state.exitDeckCreation;\r\n    exitTrue = true;\r\n    this.setState({ exitDeckCreation: exitTrue });\r\n  };\r\n\r\n  //Save Deck\r\n\r\n  saveDeck = () => {\r\n    this.props.saveDeck(this.state.currentDeck);\r\n    this.exit();\r\n  };\r\n\r\n  //Tag functionality TODO\r\n\r\n  //Deck name functionality\r\n  changeDeckName = () => {\r\n    let newnameChangeActive = this.state.nameChangeActive;\r\n    newnameChangeActive = true;\r\n    this.setState({ nameChangeActive: newnameChangeActive });\r\n  };\r\n\r\n  deckNameChanged = (event) => {\r\n    let newDeck = this.state.currentDeck;\r\n    newDeck.name = event.target.value;\r\n    this.setState({ currentDeck: newDeck });\r\n  };\r\n\r\n  closeDeckNameModal = () => {\r\n    let newnameChangeActive = this.state.nameChangeActive;\r\n    newnameChangeActive = false;\r\n    this.setState({ nameChangeActive: newnameChangeActive });\r\n  };\r\n\r\n  //Card functionality  FIX PROPAGATION\r\n  editCard = (index) => {\r\n    let cardSelection = this.state.currentCard;\r\n    //GET RID OF THIS BY DISABLING PROPAGATION\r\n    this.state.currentDeck.cards.length\r\n      ? this.state.currentDeck.cards[this.state.currentCard] === undefined\r\n        ? (cardSelection = this.state.currentDeck.cards.length - 1)\r\n        : (cardSelection = index)\r\n      : (cardSelection = undefined);\r\n\r\n    this.setState({ currentCard: cardSelection });\r\n    console.log(this.state.currentCard);\r\n    console.log(this.state.currentDeck.cards[this.state.currentCard]);\r\n  };\r\n\r\n  deleteCard = (index) => {\r\n    let newDeck = this.state.currentDeck;\r\n    newDeck.cards.splice(index, 1);\r\n  };\r\n\r\n  currentHintChange = (event) => {\r\n    let newDeck = this.state.currentDeck;\r\n    if (newDeck.cards[this.state.currentCard] === undefined) {\r\n      return;\r\n    }\r\n    newDeck.cards[this.state.currentCard].hint = event.target.value;\r\n    this.setState({ currentDeck: newDeck });\r\n  };\r\n\r\n  currentAnswerChange = (event) => {\r\n    let newDeck = this.state.currentDeck;\r\n    if (newDeck.cards[this.state.currentCard] === undefined) {\r\n      return;\r\n    }\r\n    newDeck.cards[this.state.currentCard].answer = event.target.value;\r\n    this.setState({ currentDeck: newDeck });\r\n  };\r\n\r\n  addNewCard = () => {\r\n    console.log(this.props.decks);\r\n    let newDeck = this.state.currentDeck;\r\n    let newCurrentCard = this.state.currentCard;\r\n    newCurrentCard = newDeck.cards.length;\r\n    newDeck.cards.push({ hint: \"\", answer: \"\" });\r\n    this.setState({ currentDeck: newDeck, currentCard: newCurrentCard });\r\n  };\r\n\r\n  render() {\r\n    if (\r\n      this.props.decks[this.props.currentSelection] == null ||\r\n      this.state.exitDeckCreation == true\r\n    )\r\n      return <Redirect to=\"/flacar/\"></Redirect>;\r\n    return (\r\n      <div className={styles.deckCreator}>\r\n        <ListGroup className={styles.stats}>\r\n          <h2>\r\n            {this.state.currentDeck.name != \"\"\r\n              ? this.state.currentDeck.name\r\n              : `Unnamed deck`}\r\n            <h5>\r\n              <Badge\r\n                pill\r\n                variant=\"primary\"\r\n                size=\"sm\"\r\n                onClick={this.changeDeckName}\r\n              >\r\n                Edit Name\r\n              </Badge>\r\n            </h5>\r\n          </h2>\r\n          <ListGroup.Item className={styles.statsListContainer}>\r\n            <ul className={styles.statsList}>\r\n              <li className={styles.statsListItem}>\r\n                Number of cards: {this.state.currentDeck.cards.length}\r\n              </li>\r\n              <li className={styles.statsListItem}>Tags:</li>\r\n            </ul>\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n        <div className={styles.creationContainer}>\r\n          <div className={styles.creationPanel}>\r\n            <Form className={styles.cardForm}>\r\n              <Form.Group controlId=\"formHintInput\">\r\n                <Form.Label>Hint</Form.Label>\r\n                <Form.Control\r\n                  value={\r\n                    this.state.currentCard != undefined ||\r\n                    this.state.currentCard != null\r\n                      ? this.state.currentDeck.cards[this.state.currentCard]\r\n                          .hint\r\n                      : this.state.defaultCard.hint\r\n                  }\r\n                  onChange={this.currentHintChange}\r\n                  as=\"textarea\"\r\n                  rows=\"3\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter hint here...\"\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formAnswerInput\">\r\n                <Form.Label>Answer</Form.Label>\r\n                <Form.Control\r\n                  value={\r\n                    this.state.currentCard != undefined ||\r\n                    this.state.currentCard != null\r\n                      ? this.state.currentDeck.cards[this.state.currentCard]\r\n                          .answer\r\n                      : this.state.defaultCard.answer\r\n                  }\r\n                  onChange={this.currentAnswerChange}\r\n                  as=\"textarea\"\r\n                  rows=\"3\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter answer here...\"\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n            <Button variant=\"success\" size=\"lg\" onClick={this.saveDeck} block>\r\n              SAVE DECK AND EXIT\r\n            </Button>\r\n            <Button variant=\"danger\" size=\"lg\" onClick={this.exit} block>\r\n              EXIT WITHOUT SAVING\r\n            </Button>\r\n          </div>\r\n          <div className={styles.cards}>\r\n            {this.state.currentDeck.cards.map((card, index) => (\r\n              <FlashCard\r\n                index={index}\r\n                hint={card.hint}\r\n                answer={card.answer}\r\n                editCard={this.editCard}\r\n                deleteCard={this.deleteCard}\r\n              ></FlashCard>\r\n            ))}\r\n            {this.state.currentDeck.cards.length < 20 ? (\r\n              <div\r\n                className={styles.newCardButton}\r\n                hint={\"NEW CARD\"}\r\n                onClick={this.addNewCard}\r\n              >\r\n                NEW CARD\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <ModalTextEntry\r\n          show={this.state.nameChangeActive}\r\n          hide={this.closeDeckNameModal}\r\n          currentValue={this.state.currentDeck.name}\r\n          valueChanged={this.deckNameChanged}\r\n          placeholder={\"New deck name...\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeckCreator;\r\n","import React, { useEffect } from \"react\";\r\nimport styles from \"./activeFlashCard.module.css\"\r\n\r\nfunction ActiveFlashCard(props) {\r\n\r\n    if (document.getElementById(\"flashCardInner\") !== null) {\r\n        props.showBack ? document.getElementById(\"flashCardInner\").style.transform = \"rotateY(180deg)\" : document.getElementById(\"flashCardInner\").style.transform = \"none\";\r\n    }\r\n    if (document.getElementById(\"answer\") !== null) {\r\n        props.showBack ? document.getElementById(\"answer\").style.color = \"black\" : document.getElementById(\"answer\").style.color = \"thistle\";\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.flashCard}>\r\n            <div id=\"flashCardInner\" className={styles.flashCardInner}>\r\n                <div className={styles.flashCardFront}>\r\n                    <p className={styles.hint}>{props.card.hint}</p>\r\n                </div>\r\n                <div className={styles.flashCardBack}><p id=\"answer\" className={styles.answer}>{props.card.answer}</p></div>\r\n                <div>{props.currentStreak > 1 ? <div>{props.currentStreak} in a row!!</div> : <div />}</div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ActiveFlashCard;","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport styles from \"./results.module.css\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nfunction Results(props) {\r\n  const [toHome, setToHome] = useState(false);\r\n  const highScoreText =\r\n    \"You got a great score! Keep up with the practice and you'll keep on getting high scores like these!\";\r\n  const midHighScoreText =\r\n    \"Good going! Your score is good but there is a little room for improvement. Keep practicing and you'll get there!\";\r\n  const midLowScoreText =\r\n    \"Nice try! You didn't score that high but all it will take is a bit of practice to change that!\";\r\n  const lowScore =\r\n    \"Good effort! You strugled with these questions but we all have to start somewhere. Keep up the good work!\";\r\n\r\n  return (\r\n    <div className={styles.resultsContainer}>\r\n      {toHome ? <Redirect to=\"/flacar/\" /> : null}\r\n      <div>You scored: {props.score}!</div>\r\n      <div>\r\n        {props.mark} / {props.maxMark}\r\n      </div>\r\n      <div>\r\n        {props.mark / props.maxMark >= 0.5\r\n          ? props.mark / props.maxMark >= 0.75\r\n            ? highScoreText\r\n            : midHighScoreText\r\n          : props.mark / props.maxMark >= 0.25\r\n          ? midLowScoreText\r\n          : lowScore}\r\n      </div>\r\n      <div>answer stats</div>\r\n      <Button\r\n        variant=\"success\"\r\n        size=\"lg\"\r\n        onClick={() => {\r\n          setToHome(true);\r\n        }}\r\n      >\r\n        Continue\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\"\r\nimport styles from \"./scoreBoard.module.css\"\r\n\r\nfunction ScoreBoard(props) {\r\n    return (<div className={styles.scoreBoardContainer}>\r\n        <div>Card {props.currentCard} / {props.maxMark}</div>\r\n        {props.currentStreak > 1 ? <div className={styles.streak}>{props.currentStreak} in a row</div> : <div />}\r\n\r\n        <div>Score: {props.score}</div>\r\n    </div>)\r\n}\r\n\r\nexport default ScoreBoard;","import React from \"react\";\r\nimport styles from \"./scoreMultiplier.module.css\"\r\nfunction ScoreMultiplier(props) {\r\n    return <div className={styles.multiplierContainer}>\r\n        <div className={props.currentMultiplier > 4 ? styles.fiveTimesOn : styles.fiveTimesOff}>5x</div>\r\n        <div className={props.currentMultiplier > 3 ? styles.fourTimesOn : styles.fourTimesOff}>4x</div>\r\n        <div className={props.currentMultiplier > 2 ? styles.threeTimesOn : styles.threeTimesOff}>3x</div>\r\n        <div className={props.currentMultiplier > 1 ? styles.twoTimesOn : styles.twoTimesOff}>2x</div>\r\n        <div className={styles.oneTimeOn}>1x</div>\r\n    </div>\r\n}\r\n\r\nexport default ScoreMultiplier;","import React from \"react\"\r\nimport styles from \"./progressBar.module.css\"\r\n\r\nfunction ProgressBar(props) {\r\n    return (<div className={styles.progressContainer}>\r\n        <div className={styles.marksTable}> {props.marks.map((mark, index) => (<div className={styles.progressItem}><p className={styles.questionNumber}>Question {index + 1}</p> <p className={styles.mark}>{mark === null ? \"-\" : mark === true ? \"Y\" : \"N\"}</p></div>))}\r\n\r\n        </div>\r\n        <div className={styles.correctlyAnswered}>\r\n            <p>Correct: {props.currentMark} / {props.currentCard + 1}</p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ActiveFlashCard from \"./testComponents/ActiveFlashCard\";\r\nimport Results from \"./testComponents/Results\";\r\nimport ScoreBoard from \"./testComponents/ScoreBoard\";\r\nimport styles from \"./test.module.css\";\r\nimport { Redirect } from \"react-router\";\r\nimport ScoreMultiplier from \"./testComponents/ScoreMultiplier\";\r\nimport ProgressBar from \"./testComponents/ProgressBar\";\r\n\r\nclass Test extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      cardsAnswered: 0,\r\n      currentCard: 0,\r\n      currentAnswer: \"\",\r\n      score: 0,\r\n      marks: this.props.deck ? this.props.deck.cards.map(() => null) : null,\r\n      currentMark: 0,\r\n      currentStreak: 0,\r\n      markedCorrect: false,\r\n      markedIncorrect: false,\r\n      showBack: false,\r\n    };\r\n    console.log(this.state.marks);\r\n  }\r\n\r\n  answerChanged = (event) => {\r\n    let newAnswer = this.state.currentAnswer;\r\n    newAnswer = event.target.value;\r\n    this.setState({ currentAnswer: newAnswer });\r\n  };\r\n\r\n  checkAnswerClicked = () => {\r\n    if (\r\n      this.state.currentAnswer.toLowerCase() ==\r\n      this.props.deck.cards[this.state.currentCard].answer.toLowerCase()\r\n    ) {\r\n      let correctMark = this.state.markedCorrect;\r\n      correctMark = true;\r\n      let newCurrentMark = this.state.currentMark;\r\n      newCurrentMark++;\r\n      let newCurrentStreak = this.state.currentStreak;\r\n      newCurrentStreak++;\r\n      let newScore = this.state.score;\r\n      newScore +=\r\n        this.state.currentStreak < 5\r\n          ? 100 * (this.state.currentStreak + 1)\r\n          : 500;\r\n      let showBackNow = this.state.showBack;\r\n      showBackNow = true;\r\n      let newMarks = [...this.state.marks];\r\n      newMarks[this.state.currentCard] = true;\r\n      let newCardsAnswered = this.state.cardsAnswered;\r\n      newCardsAnswered++;\r\n      this.setState({\r\n        markedCorrect: correctMark,\r\n        score: newScore,\r\n        currentMark: newCurrentMark,\r\n        currentStreak: newCurrentStreak,\r\n        showBack: showBackNow,\r\n        marks: newMarks,\r\n        cardsAnswered: newCardsAnswered,\r\n      });\r\n    } else {\r\n      let incorrectMark = this.state.markedIncorrect;\r\n      incorrectMark = true;\r\n      let showBackNow = this.state.showBack;\r\n      showBackNow = true;\r\n      let newCurrentStreak = this.state.currentStreak;\r\n      newCurrentStreak = 0;\r\n      let newMarks = [...this.state.marks];\r\n      newMarks[this.state.currentCard] = false;\r\n      let newCardsAnswered = this.state.cardsAnswered;\r\n      newCardsAnswered++;\r\n      this.setState({\r\n        markedIncorrect: incorrectMark,\r\n        showBack: showBackNow,\r\n        currentStreak: newCurrentStreak,\r\n        marks: newMarks,\r\n        cardsAnswered: newCardsAnswered,\r\n      });\r\n    }\r\n  };\r\n\r\n  nextQuestion = () => {\r\n    let nextCard = this.state.currentCard;\r\n\r\n    nextCard++;\r\n    let incorrectMarkClear = this.state.markedIncorrect;\r\n    incorrectMarkClear = false;\r\n    let correctMarkClear = this.state.markedCorrect;\r\n    correctMarkClear = false;\r\n    let showFront = this.state.showBack;\r\n    showFront = false;\r\n    let refreshAnswer = this.state.currentAnswer;\r\n    refreshAnswer = \"\";\r\n    this.setState({\r\n      currentCard: nextCard,\r\n      markedIncorrect: incorrectMarkClear,\r\n      markedCorrect: correctMarkClear,\r\n      showBack: showFront,\r\n      currentAnswer: refreshAnswer,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.deck === undefined || this.props.deck.cards.length === 0) {\r\n      return <Redirect to=\"/flacar/\" />;\r\n    }\r\n    if (this.state.currentCard === this.props.deck.cards.length) {\r\n      return (\r\n        <Results\r\n          mark={this.state.currentMark}\r\n          maxMark={this.props.deck.cards.length}\r\n          score={this.state.score}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className={styles.testingContainer}>\r\n        <ScoreBoard\r\n          currentCard={this.state.currentCard}\r\n          maxMark={this.props.deck.cards.length}\r\n          score={this.state.score}\r\n          currentStreak={this.state.currentStreak}\r\n        ></ScoreBoard>\r\n        <div className={styles.nonScoreBoardContent}>\r\n          <div className={styles.progressContainer}>\r\n            <div className={styles.progress}>\r\n              <ProgressBar\r\n                currentCard={this.state.cardsAnswered - 1}\r\n                currentMark={this.state.currentMark}\r\n                marks={this.state.marks}\r\n              ></ProgressBar>\r\n            </div>\r\n          </div>\r\n          <div className={styles.cardAndInput}>\r\n            <div className={styles.flashCardContainer}>\r\n              <ActiveFlashCard\r\n                card={this.props.deck.cards[this.state.currentCard]}\r\n                showBack={this.state.showBack}\r\n                currentStreak={this.state.currentStreak}\r\n              ></ActiveFlashCard>\r\n            </div>\r\n            <Form.Control\r\n              className={styles.answerBox}\r\n              rows=\"1\"\r\n              as=\"textarea\"\r\n              placeholder=\"Answer...\"\r\n              onChange={this.answerChanged}\r\n              value={this.state.currentAnswer}\r\n            ></Form.Control>\r\n            {!(this.state.markedCorrect || this.state.markedIncorrect) ? (\r\n              <Button\r\n                className={styles.checkButton}\r\n                variant=\"primary\"\r\n                onClick={this.checkAnswerClicked}\r\n              >\r\n                CHECK!\r\n              </Button>\r\n            ) : this.state.markedCorrect ? (\r\n              <Button\r\n                className={styles.continueButton}\r\n                variant=\"success\"\r\n                onClick={this.nextQuestion}\r\n              >\r\n                WELL DONE!\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                className={styles.continueButton}\r\n                variant=\"danger\"\r\n                onClick={this.nextQuestion}\r\n              >\r\n                BETTER LUCK NEXT TIME!\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <div className={styles.scoreMultiplierContainer}>\r\n            <div className={styles.scoreMultiplier}>\r\n              <ScoreMultiplier\r\n                currentMultiplier={\r\n                  this.state.currentStreak < 5\r\n                    ? this.state.currentStreak + 1\r\n                    : 5\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Nav from \"./appComponents/Nav\";\nimport Home from \"./appComponents/Home\";\nimport Options from \"./appComponents/Options\";\nimport Profile from \"./appComponents/Profile\";\nimport DeckCreator from \"./appComponents/DeckCreator\";\nimport Test from \"./appComponents/Test\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      decks: [],\n      currentSelection: null,\n    };\n  }\n  componentDidMount() {\n    if (localStorage.getItem(\"decks\")) {\n      let savedDecks = localStorage.getItem(\"decks\");\n      savedDecks = JSON.parse(savedDecks);\n      this.setState({ decks: savedDecks });\n    }\n  }\n\n  saveDeck = (newDeck) => {\n    let newDecks = [...this.state.decks];\n    newDecks[this.state.currentSelection] = newDeck;\n    this.setState(\n      { decks: newDecks },\n      localStorage.setItem(\"decks\", JSON.stringify(newDecks))\n    );\n  };\n\n  deleteDeck = (index) => {\n    let newDecks = [...this.state.decks];\n    newDecks.splice(index, 1);\n    this.setState(\n      { decks: newDecks },\n      localStorage.setItem(\"decks\", JSON.stringify(newDecks))\n    );\n  };\n\n  editDeck = (index) => {\n    let selection = this.state.currentSelection;\n    selection = index;\n    this.setState({ currentSelection: selection });\n  };\n\n  startTest = (index) => {\n    let selection = this.state.currentSelection;\n    selection = index;\n    this.setState({ currentSelection: selection });\n  };\n\n  createDeck = () => {\n    let newDecks = [...this.state.decks];\n    newDecks.push({ name: \"New Deck\", cards: [] });\n    this.setState(\n      { decks: newDecks },\n      localStorage.setItem(\"decks\", JSON.stringify(newDecks))\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Nav />\n          <Switch>\n            <Route\n              path=\"/flacar/\"\n              exact\n              render={(props) => (\n                <Home\n                  decks={this.state.decks}\n                  currentSelection={this.state.currentSelection}\n                  deleteDeck={this.deleteDeck}\n                  editDeck={this.editDeck}\n                  startTest={this.startTest}\n                  createDeck={this.createDeck}\n                ></Home>\n              )}\n            />\n            <Route\n              path=\"/flacar/options\"\n              render={(props) => <Options></Options>}\n            />\n            <Route\n              path=\"/flacar/profile\"\n              render={(props) => <Profile></Profile>}\n            />\n            <Route\n              path=\"/flacar/deckcreator\"\n              render={(props) => (\n                <DeckCreator\n                  decks={this.state.decks}\n                  currentSelection={this.state.currentSelection}\n                  saveDeck={this.saveDeck}\n                ></DeckCreator>\n              )}\n            />\n            <Route\n              path=\"/flacar/testing\"\n              render={(props) => (\n                <Test\n                  deck={this.state.decks[this.state.currentSelection]}\n                ></Test>\n              )}\n            />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}